"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPrepareRenameHandler = void 0;
const node_1 = require("vscode-languageserver-protocol/node");
const hints_1 = require("../hints");
const utils_1 = require("../utils");
function getPrepareRenameHandler(context) {
    const { trees, docs, connection } = context;
    return function handlePrepareRename(params) {
        const { position, textDocument } = params;
        const node = utils_1.getNodeAt(trees[textDocument.uri], position.line, position.character);
        if (!node || !utils_1.isIdentifier(node))
            return null;
        const name = utils_1.getName(node);
        if (!name)
            return null;
        const builtins = hints_1.getBuiltinHints(docs);
        if (builtins[name]) {
            connection.window.showErrorMessage(`'${name}' is builtin`);
            return null;
        }
        return node_1.Range.create(utils_1.pointToPosition(node.startPosition), utils_1.pointToPosition(node.endPosition));
    };
}
exports.getPrepareRenameHandler = getPrepareRenameHandler;
//# sourceMappingURL=handlePrepareRename.js.map