"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getCreateFilesHandler = void 0;
const url_1 = require("url");
const analyze_1 = require("../analyze");
const io_1 = require("../io");
const validate_1 = require("../validation/validate");
/**
 * This handles the case when deleted file is restored with Ctrl+z
 */
function getCreateFilesHandler(context) {
    const { trees, symbols, namespaces, dependencies, docs } = context;
    return function handleCreateFiles(params) {
        for (const file of params.files) {
            const textDocument = io_1.readDocumentFromUrl(context, new url_1.URL(file.uri));
            if (!textDocument) {
                context.connection.window.showWarningMessage(`Could not read ${file.uri}. Analyzing is skipped.`);
                return;
            }
            const results = analyze_1.analyze(context, textDocument, docs);
            trees[file.uri] = results.tree;
            symbols[file.uri] = results.symbols;
            namespaces[file.uri] = results.namespaces;
            dependencies.update(file.uri, new Set(results.dependencyUris));
            const dependents = dependencies.get(file.uri).parentUris;
            for (const depUri of dependents) {
                context.connection.sendDiagnostics({
                    uri: depUri,
                    diagnostics: validate_1.validate(trees[depUri], symbols, namespaces, dependencies, depUri, docs),
                });
            }
        }
    };
}
exports.getCreateFilesHandler = getCreateFilesHandler;
//# sourceMappingURL=handleCreateFiles.js.map