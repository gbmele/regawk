"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDidDeleteFilesHandler = exports.handleWillDeleteFiles = void 0;
const io_1 = require("../io");
const utils_1 = require("../utils");
const validate_1 = require("../validation/validate");
// Folder can have multiple file deletes associated with it
const fileDeletesMap = new Map();
// There is no guarantee of ordering of events
// Can we see multiple willDelete before single DidDelete?
function handleWillDeleteFiles(params) {
    for (const { uri } of params.files) {
        if (!fileDeletesMap.has(uri))
            fileDeletesMap.set(uri, new Set());
        if (io_1.isDir(uri)) {
            for (const url of io_1.getAwkFilesInDir(uri)) {
                fileDeletesMap.get(uri).add({ uri: url.toString() });
            }
            continue;
        }
        if (!utils_1.isAwkExtension(uri))
            continue;
        fileDeletesMap.get(uri).add({ uri });
    }
    return null;
}
exports.handleWillDeleteFiles = handleWillDeleteFiles;
function getDidDeleteFilesHandler(context) {
    const { trees, symbols, namespaces, dependencies, docs } = context;
    return function handleDidDeleteFiles(params) {
        for (const { uri } of params.files) {
            if (!fileDeletesMap.has(uri))
                continue;
            for (const fileDelete of fileDeletesMap.get(uri)) {
                const dependents = dependencies.get(fileDelete.uri).parentUris;
                delete trees[fileDelete.uri];
                delete symbols[fileDelete.uri];
                delete namespaces[fileDelete.uri];
                for (const depUri of dependents) {
                    context.connection.sendDiagnostics({
                        uri: depUri,
                        diagnostics: validate_1.validate(trees[depUri], symbols, namespaces, dependencies, depUri, docs),
                    });
                }
            }
            fileDeletesMap.delete(uri);
        }
    };
}
exports.getDidDeleteFilesHandler = getDidDeleteFilesHandler;
//# sourceMappingURL=handleDeleteFiles.js.map