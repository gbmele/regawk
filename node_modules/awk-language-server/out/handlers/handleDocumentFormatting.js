"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDocumentFormattingHandler = void 0;
const node_1 = require("vscode-languageserver/node");
const format_1 = require("../format");
function getDocumentFormattingHandler(context) {
    const { documents, connection } = context;
    return (params) => {
        const editedDocument = documents.get(params.textDocument.uri);
        if (!editedDocument)
            return [];
        const text = editedDocument.getText();
        let formattedText = null;
        try {
            formattedText = format_1.formatDocument(text);
        }
        catch (err) {
            if (err instanceof Error) {
                connection.window.showErrorMessage(err.message);
            }
            if (typeof err === 'string') {
                connection.window.showErrorMessage(err);
            }
            return [];
        }
        if (!formattedText)
            return [];
        const editedRange = node_1.Range.create(node_1.Position.create(0, 0), node_1.Position.create(editedDocument.lineCount, node_1.uinteger.MAX_VALUE));
        return [node_1.TextEdit.replace(editedRange, formattedText)];
    };
}
exports.getDocumentFormattingHandler = getDocumentFormattingHandler;
//# sourceMappingURL=handleDocumentFormatting.js.map