export declare function difference<T>(set1: Set<T>, set2: Set<T>): Set<T>;
export declare class DependencyNode {
    parentUris: Set<string>;
    childrenUris: Set<string>;
}
export declare class DependencyMap extends Map<string, DependencyNode> {
    get(uri: string): DependencyNode;
    update(uri: string, newDependencies: Set<string>): void;
    hasParent(uri: string, parentUri: string, visitedUris?: Set<string>): boolean;
    /**
     * Get entire dependency tree flattened to a set of URIs
     */
    getAllBreadthFirst(uri: string): Set<string>;
    /**
     * Get entire dependency tree flattened to a set of URIs
     */
    getAllDepthFirst(uri: string): Set<string>;
    /**
     * Get document URIs which have access to the given document scope
     */
    getLinkedUris(queriedUri: string): Set<string>;
}
