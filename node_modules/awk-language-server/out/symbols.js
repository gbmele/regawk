"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getFinalSymbolByPosition = exports.getNearestPrecedingSymbol = void 0;
function getNearestPrecedingSymbol(startingPosition, symbolsToSearch) {
    const { line, character } = startingPosition;
    let result = null;
    for (const sym of symbolsToSearch) {
        const newLineDistance = line - sym.location.range.start.line;
        if (newLineDistance < 0)
            continue;
        if (!result) {
            result = sym;
            continue;
        }
        const currentLineDistance = line - result.location.range.start.line;
        if (newLineDistance < currentLineDistance) {
            result = sym;
            continue;
        }
        const currentCharDistance = character - result.location.range.start.character;
        const newCharDistance = character - sym.location.range.start.character;
        if (newCharDistance < currentCharDistance)
            result = sym;
    }
    return result;
}
exports.getNearestPrecedingSymbol = getNearestPrecedingSymbol;
function getFinalSymbolByPosition(symbolsToSearch) {
    let result = null;
    for (const sym of symbolsToSearch) {
        if (!result) {
            result = sym;
            continue;
        }
        if (sym.location.range.start.line > result.location.range.start.line) {
            result = sym;
            continue;
        }
        if (sym.location.range.start.character > result.location.range.start.character) {
            result = sym;
        }
    }
    return result;
}
exports.getFinalSymbolByPosition = getFinalSymbolByPosition;
//# sourceMappingURL=symbols.js.map