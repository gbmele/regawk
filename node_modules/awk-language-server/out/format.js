"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.formatDocument = exports.isAwkPluginAvailable = exports.initFormatter = void 0;
const child_process_1 = require("child_process");
const url_1 = require("url");
const path_1 = require("path");
let prettierCmd = '';
function initFormatter(workspaceFolders) {
    for (const wsf of workspaceFolders) {
        const prettierPath = path_1.resolve(url_1.fileURLToPath(wsf.uri), 'node_modules', '.bin', 'prettier');
        if (isAwkPluginAvailable(prettierPath)) {
            prettierCmd = prettierPath;
            return;
        }
    }
    if (isAwkPluginAvailable('prettier'))
        prettierCmd = 'prettier';
}
exports.initFormatter = initFormatter;
function isAwkPluginAvailable(prettierCmd) {
    let supportInfoRaw;
    try {
        supportInfoRaw = child_process_1.execSync(`${prettierCmd} --support-info`, { encoding: 'utf8' });
    }
    catch (_err) {
        return false;
    }
    const supportInfo = JSON.parse(supportInfoRaw);
    return supportInfo.languages.some((l) => l.name.toLocaleLowerCase() === 'awk');
}
exports.isAwkPluginAvailable = isAwkPluginAvailable;
function formatDocument(text) {
    if (!prettierCmd)
        return null;
    const { stdout, status, error } = child_process_1.spawnSync(prettierCmd, ['--parser', 'awk-parse', '--loglevel', 'silent'], {
        input: text,
        encoding: 'utf8',
    });
    if (status !== 0) {
        throw new Error('Cannot format document. Make sure there is no syntax error');
    }
    if (error) {
        throw error;
    }
    return stdout;
}
exports.formatDocument = formatDocument;
//# sourceMappingURL=format.js.map